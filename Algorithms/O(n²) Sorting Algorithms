## Bubble Sort

'Bubble Sort Example':

Consider the list of cards: [9, 4, 10, 3]

Iteration 1:
Compare 9 and 4. Since 9 > 4, swap them: [4, 9, 10, 3]
Compare 9 and 10. Since 9 < 10, no swap needed: [4, 9, 10, 3]
Compare 10 and 3. Since 10 > 3, swap them: [4, 9, 3, 10]

Iteration 2:
Compare 4 and 9. Since 4 < 9, no swap needed: [4, 9, 3, 10]
Compare 9 and 3. Since 9 > 3, swap them: [4, 3, 9, 10]
Compare 9 and 10. Since 9 < 10, no swap needed: [4, 3, 9, 10]

Iteration 3:
Compare 4 and 3. Since 4 > 3, swap them: [3, 4, 9, 10]
Compare 4 and 9. Since 4 < 9, no swap needed: [3, 4, 9, 10]
Compare 9 and 10. Since 9 < 10, no swap needed: [3, 4, 9, 10]

Result:
The final sorted list is [3, 4, 9, 10]
In each iteration, Bubble Sort compares adjacent elements and swaps them if they are in the wrong order. After each iteration, the largest unsorted element bubbles up to its correct position. This process repeats until the entire list is sorted.

```
extension SwappableList<E> on List<E> {
  void swap(int indexA, int indexB) {
    final temp = this[indexA];
    this[indexA] = this[indexB];
    this[indexB] = temp;
  }
}
```
```
import 'swap.dart';
void bubbleSort<E extends Comparable<dynamic>>(List<E> list) {
  // 1
  for (var end = list.length - 1; end > 0; end--) {
    var swapped = false;
  // 2
    for (var current = 0; current < end; current++) {
      if (list[current].compareTo(list[current + 1]) > 0) {
        list.swap(current, current + 1);
        swapped = true;
      }
    }
  // 3
    if (!swapped) return;
  }
}
```
